language: cpp
compiler: gcc
sudo: require
dist: trusty # Qt5, from https://gist.github.com/jreese/6207161#gistcomment-1462109

before_install:
  - echo $TRAVIS_BRANCH
  # Qt5, from https://gist.github.com/jreese/6207161#gistcomment-1462109
  - sudo add-apt-repository --yes ppa:ubuntu-sdk-team/ppa
  - sudo apt-get update -qq
  # C++14
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  # R
  - sudo add-apt-repository -y ppa:marutter/rrutter
  - sudo apt-get update -qq

install: 
  # Qt5
  - sudo apt-get install -qq libqt5webkit5-dev qtdeclarative5-dev
  - export QMAKE=/usr/lib/x86_64-linux-gnu/qt5/bin/qmake
  # C++14
  - sudo apt-get install -qq g++-5
  # gcov
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 90
  - sudo pip install codecov
  # GSL
  - git clone https://github.com/Microsoft/GSL
  # OpenCV
  - if [[ $TRAVIS_BRANCH == "cine" || $TRAVIS_BRANCH == "master" ]]; then sudo apt-get install libopencv-dev; fi
  # R
  - if [[ $TRAVIS_BRANCH == "pbd" || $TRAVIS_BRANCH == "ribi" || $TRAVIS_BRANCH == "master" ]]; then sudo apt-get install r-base r-base-dev; fi
  - if [[ $TRAVIS_BRANCH == "pbd" || $TRAVIS_BRANCH == "ribi" || $TRAVIS_BRANCH == "master" ]]; then sudo Rscript -e 'source("install_r_packages.R")'; fi
  # OCLint
  - ./install_oclint
  # GraphViz
  - sudo apt-get install -qq graphviz

# Boost
addons: 
  apt: 
    packages: libboost-all-dev

# Start virtual X server, from https://docs.travis-ci.com/user/gui-and-headless-browsers/
before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

script: 
  - ./download_other_githubs
  ###############################################
  # Build and run the tests
  ###############################################
  # cine_test
  - if [[ $TRAVIS_BRANCH == "cine" || $TRAVIS_BRANCH == "master" ]]; then qmake cine_test.pro; make debug; ./cine_test; fi 
  # jobo_test
  - if [[ $TRAVIS_BRANCH == "jobo" || $TRAVIS_BRANCH == "master" ]]; then qmake jobo_test.pro; make debug; ./jobo_test; fi 
  # kewe_test
  - if [[ $TRAVIS_BRANCH == "kewe" || $TRAVIS_BRANCH == "master" ]]; then qmake kewe_test.pro; make debug; ./kewe_test; fi 
  # lyke_test
  - if [[ $TRAVIS_BRANCH == "lyke" || $TRAVIS_BRANCH == "master" ]]; then qmake lyke_test.pro; make debug; ./lyke_test; fi 
  # ribi
  - if [[ $TRAVIS_BRANCH == "ribi" || $TRAVIS_BRANCH == "master" ]]; then qmake ribi_test.pro; fi 
  - if [[ $TRAVIS_BRANCH == "ribi" || $TRAVIS_BRANCH == "master" ]]; then time make debug; fi 
  - if [[ $TRAVIS_BRANCH == "ribi" || $TRAVIS_BRANCH == "master" ]]; then time ./ribi_test; fi 
  # pbd
  - if [[ $TRAVIS_BRANCH == "pbd" || $TRAVIS_BRANCH == "master" ]]; then qmake pbd_test.pro; make debug; ./pbd_test; fi 
  ###############################################
  # Build and run (when possible) the command line applications
  ###############################################
  # cine
  - if [[ $TRAVIS_BRANCH == "cine" || $TRAVIS_BRANCH == "master" ]]; then qmake cine.pro; make debug; ./cine; fi 
  # elly
  - if [[ $TRAVIS_BRANCH == "elly" || $TRAVIS_BRANCH == "master" ]]; then qmake elly.pro; make debug; ./elly; fi 
  # jobo
  - if [[ $TRAVIS_BRANCH == "jobo" || $TRAVIS_BRANCH == "master" ]]; then qmake jobo.pro; make debug; fi 
  # kewe
  - if [[ $TRAVIS_BRANCH == "kewe" || $TRAVIS_BRANCH == "master" ]]; then qmake kewe.pro; make debug; fi 
  # lyke
  #   Nope, do this at profiling
  # ribi
  #   Nope, do this at profiling
  # pbd
  - if [[ $TRAVIS_BRANCH == "pbd" || $TRAVIS_BRANCH == "master" ]]; then qmake pbd.pro; make debug; fi 
  # sado
  - if [[ $TRAVIS_BRANCH == "sado" ]]; then qmake sado.pro; fi 
  - if [[ $TRAVIS_BRANCH == "sado" ]]; then time make debug; fi 
  - if [[ $TRAVIS_BRANCH == "sado" ]]; then time ./sado --golden; fi 
  ###############################################
  # Build (not run) the GUIs
  ###############################################
  # ribi
  - if [[ $TRAVIS_BRANCH == "ribi" || $TRAVIS_BRANCH == "master" ]]; then qmake -qt=qt5 ribi_gui.pro; fi 
  - if [[ $TRAVIS_BRANCH == "ribi" || $TRAVIS_BRANCH == "master" ]]; then time make debug; fi 
  # pbd
  - if [[ $TRAVIS_BRANCH == "ribi" || $TRAVIS_BRANCH == "master" ]]; then qmake -qt=qt5 pbd_gui.pro; make debug; fi 
  ###############################################
  # Profiling, requires a rebuild in release mode
  ###############################################
  # cine
  - if [[ $TRAVIS_BRANCH == "cine" ]]; then qmake cine.pro; fi 
  - if [[ $TRAVIS_BRANCH == "cine" ]]; then make release; fi 
  - if [[ $TRAVIS_BRANCH == "cine" ]]; then time ./cine --profile; fi 
  - if [[ $TRAVIS_BRANCH == "cine" ]]; then gprof cine > gprof.log; fi 
  - if [[ $TRAVIS_BRANCH == "cine" ]]; then head gprof.log -n 1000; fi 
  # elly
  - if [[ $TRAVIS_BRANCH == "elly" ]]; then qmake elly.pro; fi 
  - if [[ $TRAVIS_BRANCH == "elly" ]]; then make release; fi 
  - if [[ $TRAVIS_BRANCH == "elly" ]]; then time ./elly --profile; fi 
  - if [[ $TRAVIS_BRANCH == "elly" ]]; then gprof elly > gprof.log; fi 
  - if [[ $TRAVIS_BRANCH == "elly" ]]; then head gprof.log -n 1000; fi 
  # jaan
  - if [[ $TRAVIS_BRANCH == "jaan" ]]; then qmake jaan_EDSS.pro; fi 
  - if [[ $TRAVIS_BRANCH == "jaan" ]]; then make release; fi 
  - if [[ $TRAVIS_BRANCH == "jaan" ]]; then time ./jaan_EDSS; fi 
  - if [[ $TRAVIS_BRANCH == "jaan" ]]; then gprof jaan_EDSS > gprof.log; fi 
  - if [[ $TRAVIS_BRANCH == "jaan" ]]; then head gprof.log -n 1000; fi 
  # jobo
  - if [[ $TRAVIS_BRANCH == "jobo" ]]; then qmake jobo.pro; fi 
  - if [[ $TRAVIS_BRANCH == "jobo" ]]; then make release; fi 
  - if [[ $TRAVIS_BRANCH == "jobo" ]]; then time ./jobo --profile; fi 
  - if [[ $TRAVIS_BRANCH == "jobo" ]]; then gprof jobo > gprof.log; fi 
  - if [[ $TRAVIS_BRANCH == "jobo" ]]; then head gprof.log -n 1000; fi 
  # kewe
  - if [[ $TRAVIS_BRANCH == "kewe" ]]; then qmake kewe.pro; fi 
  - if [[ $TRAVIS_BRANCH == "kewe" ]]; then make release; fi 
  - if [[ $TRAVIS_BRANCH == "kewe" ]]; then time ./kewe --profile; fi 
  - if [[ $TRAVIS_BRANCH == "kewe" ]]; then gprof kewe > gprof.log; fi 
  - if [[ $TRAVIS_BRANCH == "kewe" ]]; then head gprof.log -n 1000; fi 
  # lyke
  - if [[ $TRAVIS_BRANCH == "lyke" ]]; then qmake lyke.pro; fi 
  - if [[ $TRAVIS_BRANCH == "lyke" ]]; then make release; fi 
  - if [[ $TRAVIS_BRANCH == "lyke" ]]; then time ./lyke --profile; fi 
  - if [[ $TRAVIS_BRANCH == "lyke" ]]; then gprof lyke > gprof.log; fi 
  - if [[ $TRAVIS_BRANCH == "lyke" ]]; then head gprof.log -n 1000; fi 
  # ribi
  - if [[ $TRAVIS_BRANCH == "ribi" ]]; then qmake ribi.pro; fi 
  - if [[ $TRAVIS_BRANCH == "ribi" ]]; then time make release; fi 
  - if [[ $TRAVIS_BRANCH == "ribi" ]]; then time ./ribi --profile; fi 
  - if [[ $TRAVIS_BRANCH == "ribi" ]]; then gprof ribi > gprof.log; fi 
  - if [[ $TRAVIS_BRANCH == "ribi" ]]; then head gprof.log -n 1000; fi 
  # sado
  - if [[ $TRAVIS_BRANCH == "sado" ]]; then qmake sado.pro; fi 
  - if [[ $TRAVIS_BRANCH == "sado" ]]; then time make release; fi 
  - if [[ $TRAVIS_BRANCH == "sado" ]]; then time ./sado --profile; fi 
  - if [[ $TRAVIS_BRANCH == "sado" ]]; then gprof sado > gprof.log; fi 
  - if [[ $TRAVIS_BRANCH == "sado" ]]; then head gprof.log -n 1000; fi 
  ###############################################
  # Code coverage
  ###############################################
  - ./get_code_cov >/dev/null
  - codecov >/dev/null
  ###############################################
  # OCLint
  ###############################################
  - ./do_oclint

after_success:
  - bash <(curl -s https://codecov.io/bash)

